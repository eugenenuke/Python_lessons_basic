#!/usr/bin/env python3

print("\nЗадача 1\n")

################################################################################
# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.
################################################################################

# Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
# 1. яблоко
# 2.  банан
# 3.   киви
# 4.  арбуз

# Подсказка: воспользоваться методом .format()

fruits = ["яблоко", "банан", "киви", "арбуз"]

# Вычисляем максимальную длину элемента, для использования в качестве отступа

max_len = 0
for fruit in fruits:
    if len(fruit) > max_len:
        max_len = len(fruit)

# Спецификация строки форматирования:
# https://docs.python.org/3/library/string.html#formatstrings
# "{" [field_name] [":" format_spec] "}"
# format_spec     ::=  [align][width]
# Итого, для выравнивания по правому краю { :>max_len }

# Вариант через while + list[index]
# index = 0
# while index < len(fruits):
#     print("{0}. {1:>{2}}".format(index+1, fruits[index], max_len))
#     index += 1

index = 1
for fruit in fruits:
    print("{0}. {1:>{2}}".format(index, fruit, max_len))
    index += 1

# Адаптивная ZeroPadding нумерация
# index = 0
# while index < len(fruits):
#     print("{0:0{3}}. {1:>{2}}".format(index+1, fruits[index], max_len, len(str(len(fruits)))))
#     index += 1

print("\nЗадача 2\n")

################################################################################
# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.
################################################################################

fruits = ["яблоко", "яблоко", "банан", "киви", "арбуз", "мандарин", "яблоко"]
bad_fruits = ["яблоко", "ананас", "апельсин", "арбуз"]

print("Список фруктов:", fruits, sep='\t\t\t')
print("Список санкционных фруктов:", bad_fruits, sep='\t')

# Быстрое решение. Теряем порядок в списке, но задание выполняем
fruits = list(set(fruits) - set(bad_fruits))

# Второй вариант, с сохранением порядка
# index = 0
# while index < len(fruits):
#     if fruits[index] in bad_fruits:
#         fruits.remove(fruits[index])
#         continue
#     index += 1

print()
print("Итоговый список:", fruits, sep='\t\t', end='\n\n')

print("Задача 3", end='\n\n')

################################################################################
# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.
################################################################################

numbers = [1, 2, 3, 4, 5, 6, 10, 12, 13, 15, 5, 21, 1, 0]

print("Исходный список:", numbers, sep='\t')

new_numbers = []
for number in numbers:
    # Когда число кратно 2, получаем 0. А 0 считается за False
    # Учитываем этот момент
    if number % 2:
        new_numbers.append(number*2)
    else:
        new_numbers.append(number/4)

# Next-level вариант с использованием (ifTrue, ifFalse)[bool]
# new_numbers = list(map(lambda x: (x / 4, x * 2)[x % 2], numbers))

print("Результирующий список:", new_numbers, sep='\t')

